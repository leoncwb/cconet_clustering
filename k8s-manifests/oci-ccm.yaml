---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloud-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:cloud-controller-manager
rules:
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ['get', 'create']
  - apiGroups: ['']
    resources: ['configmaps']
    verbs: ['get', 'create', 'update']
  - apiGroups: ['']
    resources: ['nodes']
    verbs: ['get', 'list', 'watch', 'update']
  - apiGroups: ['']
    resources: ['services', 'services/status']
    verbs: ['get', 'list', 'watch', 'update', 'patch']
  - apiGroups: ['']
    resources: ['events']
    verbs: ['create', 'patch', 'update']
  - apiGroups: ['coordination.k8s.io']
    resources: ['leases']
    verbs: ['get', 'create', 'update']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:cloud-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:cloud-controller-manager
subjects:
  - kind: ServiceAccount
    name: cloud-controller-manager
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: oci-cloud-controller-manager
  namespace: kube-system
  labels:
    k8s-app: oci-cloud-controller-manager
spec:
  selector:
    matchLabels:
      k8s-app: oci-cloud-controller-manager
  template:
    metadata:
      labels:
        k8s-app: oci-cloud-controller-manager
    spec:
      serviceAccountName: cloud-controller-manager
      hostNetwork: true
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: Exists
          effect: NoSchedule
        - key: "node-role.kubernetes.io/master"
          operator: Exists
          effect: NoSchedule
        - key: "node.cloudprovider.kubernetes.io/uninitialized"
          operator: Exists
          effect: NoSchedule
      containers:
        - name: oci-cloud-controller-manager
          image: ghcr.io/oracle/cloud-provider-oci:v1.33.0
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/oci-cloud-controller-manager
          args:
            - --cloud-config=/etc/oci/cloud-provider.yaml
            - --cloud-provider=oci
            - --leader-elect-resource-lock=leases
            - --concurrent-service-syncs=3
            - --v=2
          volumeMounts:
            - name: cfg
              mountPath: /etc/oci
              readOnly: true
            - name: kubernetes
              mountPath: /etc/kubernetes
              readOnly: true
      volumes:
        - name: cfg
          secret:
            secretName: oci-cloud-controller-manager
        - name: kubernetes
          hostPath:
            path: /etc/kubernetes
